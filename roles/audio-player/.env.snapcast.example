# Snapcast Synchronized Audio Configuration
# Copy this to .env and customize per device

# ================================
# DEVICE IDENTITY (REQUIRED)
# ================================
# Must be unique per device: pi-audio-01, pi-audio-02, etc.
DEVICE_ID=pi-audio-01

# ================================
# SNAPCAST SERVER (REQUIRED)
# ================================
# VPS Tailscale IP or hostname
# Get from: tailscale status on VPS
# Example: 100.x.x.x or vps.tailnet-name.ts.net
SNAPCAST_SERVER=100.64.0.1

# ================================
# AUDIO OUTPUT (REQUIRED)
# ================================
# HiFiBerry DAC: plughw:0,0 or hw:0,0
AUDIO_OUTPUT_DEVICE=plughw:0,0

# Initial volume (0.0 to 2.0)
# IMPORTANT: Set to 0.0 for initial testing to avoid disturbing salon
AUDIO_VOLUME=0.0

# ================================
# HARDWARE MIXER (OPTIONAL)
# ================================
# Card index and control name for HiFiBerry
AUDIO_MIXER_CARD=0
AUDIO_MIXER_CONTROL=Master

# ================================
# CONTROL API (OPTIONAL)
# ================================
# Bearer token for API authentication
AUDIO_CONTROL_TOKEN=changeme-token

# ================================
# LOGGING (OPTIONAL)
# ================================
LOG_SERVICE=audio-control
LOG_ROLE=audio-player
LOG_COMMIT=unknown

# ================================
# DEPLOYMENT NOTES
# ================================
# 1. Copy this file to .env: cp .env.snapcast.example .env
# 2. Edit DEVICE_ID for each Pi (pi-audio-01, pi-audio-02)
# 3. Set SNAPCAST_SERVER to VPS Tailscale address
# 4. Verify AUDIO_VOLUME=0.0 for safe testing
# 5. Deploy via: sudo systemctl restart role-agent
#
# To find VPS Tailscale IP:
#   ssh vps
#   tailscale status | grep vps
#
# To test Snapcast connection from Pi:
#   ping <SNAPCAST_SERVER>
#   nc -zv <SNAPCAST_SERVER> 1704
