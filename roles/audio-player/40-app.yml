services:
  audio-player:
    build:
      context: ./docker
      dockerfile: audio-player.Dockerfile
    restart: unless-stopped
    devices:
      - "/dev/snd:/dev/snd"
    group_add:
      - "audio"
    environment:
      - AUDIO_DATA_DIR=/data
      - AUDIO_OUTPUT_DEVICE=${AUDIO_OUTPUT_DEVICE:-plughw:0,0}
      - AUDIO_VOLUME=${AUDIO_VOLUME:-1.0}
      - STREAM_URL=${STREAM_URL:-${ICECAST_SCHEME:-http}://${ICECAST_HOST}:${ICECAST_PORT:-8000}/${ICECAST_MOUNT}}
      - ICECAST_SCHEME=${ICECAST_SCHEME:-http}
      - ICECAST_HOST=${ICECAST_HOST:-}
      - ICECAST_PORT=${ICECAST_PORT:-8000}
      - ICECAST_MOUNT=${ICECAST_MOUNT:-}
      - FALLBACK_FILE=${FALLBACK_FILE:-/data/fallback.mp3}
    volumes:
      - audio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f 'ffmpeg.*alsa' >/dev/null 2>&1"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 15s
    command: ["python3", "-u", "/app/player.py"]

  audio-control:
    build:
      context: ./docker
      dockerfile: audio-control.Dockerfile
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - CONTROL_BIND=0.0.0.0
      - CONTROL_PORT=8081
      - AUDIO_DATA_DIR=/data
      - AUTH_TOKEN=${AUDIO_CONTROL_TOKEN:-}
      - AUDIO_VOLUME=${AUDIO_VOLUME:-1.0}
      - STREAM_URL=${STREAM_URL:-${ICECAST_SCHEME:-http}://${ICECAST_HOST}:${ICECAST_PORT:-8000}/${ICECAST_MOUNT}}
      - ICECAST_SCHEME=${ICECAST_SCHEME:-http}
      - ICECAST_HOST=${ICECAST_HOST:-}
      - ICECAST_PORT=${ICECAST_PORT:-8000}
      - ICECAST_MOUNT=${ICECAST_MOUNT:-}
      - MIXER_CARD=${AUDIO_MIXER_CARD:-0}
      - MIXER_CONTROL=${AUDIO_MIXER_CONTROL:-Master}
    volumes:
      - audio_data:/data
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request,sys; urllib.request.urlopen('http://127.0.0.1:8081/healthz', timeout=2)"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    command: ["python3", "-u", "/app/control.py"]

volumes:
  audio_data: {}
