openapi: 3.0.3
info:
  title: Fleet Control API
  version: 0.1.0
  description: >-
    Fleet API providing authenticated control and observability for on-prem devices.
servers:
  - url: https://api.example.com
security:
  - bearerAuth: []
paths:
  /healthz:
    get:
      summary: Liveness probe
      security: []
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  uptime:
                    type: number
                  timestamp:
                    type: string
                    format: date-time
  /readyz:
    get:
      summary: Readiness probe
      security: []
      responses:
        '200':
          description: API ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessResponse'
        '503':
          description: API not ready
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadinessResponse'
  /metrics:
    get:
      summary: Prometheus metrics
      responses:
        '200':
          description: Metrics payload
          content:
            text/plain:
              schema:
                type: string
  /fleet/layout:
    get:
      summary: Fleet layout metadata
      responses:
        '200':
          description: Layout description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetLayoutResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /fleet/state:
    get:
      summary: Fleet operational state snapshot
      responses:
        '200':
          description: Aggregated state information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FleetStateResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /audio/{deviceId}/status:
    get:
      summary: Fetch audio device status
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      responses:
        '200':
          description: Current status
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  status:
                    $ref: '#/components/schemas/AudioStatus'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '502':
          $ref: '#/components/responses/UpstreamFailure'
  /audio/{deviceId}/config:
    get:
      summary: Fetch audio device configuration
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      responses:
        '200':
          description: Current configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  config:
                    $ref: '#/components/schemas/AudioConfig'
    put:
      summary: Update audio device configuration
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioConfig'
      responses:
        '200':
          description: Updated configuration
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  config:
                    $ref: '#/components/schemas/AudioConfig'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/ValidationFailed'
  /audio/{deviceId}/volume:
    post:
      summary: Set audio volume
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioVolumeRequest'
      responses:
        '200':
          description: Volume updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  config:
                    $ref: '#/components/schemas/AudioConfig'
        '422':
          $ref: '#/components/responses/ValidationFailed'
  /audio/{deviceId}/play:
    post:
      summary: Start playback
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioPlayRequest'
      responses:
        '200':
          description: Playback started
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  config:
                    $ref: '#/components/schemas/AudioConfig'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/ValidationFailed'
  /audio/{deviceId}/stop:
    post:
      summary: Stop playback
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      responses:
        '200':
          description: Playback stopped
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  config:
                    $ref: '#/components/schemas/AudioConfig'
  /audio/{deviceId}/upload:
    post:
      summary: Upload fallback audio file
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
              required:
                - file
      responses:
        '200':
          description: Fallback uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  result:
                    $ref: '#/components/schemas/UploadResult'
  /video/devices:
    get:
      summary: List video devices (stub)
      responses:
        '200':
          description: Video devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/StubDevice'
                  updatedAt:
                    type: string
                    format: date-time
  /video/devices/{deviceId}/commands:
    post:
      summary: Submit video command (stub)
      parameters:
        - $ref: '#/components/parameters/DeviceId'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Command acknowledgement
          content:
            application/json:
              schema:
                type: object
                properties:
                  deviceId:
                    type: string
                  accepted:
                    type: boolean
                  message:
                    type: string
  /zigbee/devices:
    get:
      summary: List zigbee devices (stub)
      responses:
        '200':
          description: Zigbee devices
          content:
            application/json:
              schema:
                type: object
                properties:
                  devices:
                    type: array
                    items:
                      $ref: '#/components/schemas/StubDevice'
                  updatedAt:
                    type: string
                    format: date-time
  /zigbee/actions:
    post:
      summary: Perform zigbee action (stub)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                command:
                  type: string
                payload:
                  type: object
                  additionalProperties: true
              required:
                - deviceId
                - command
      responses:
        '200':
          description: Action acknowledgement
          content:
            application/json:
              schema:
                type: object
                properties:
                  accepted:
                    type: boolean
                  message:
                    type: string
                  request:
                    type: object
                    additionalProperties: true
  /camera/summary:
    get:
      summary: Camera summary (stub)
      responses:
        '200':
          description: Camera summary
          content:
            application/json:
              schema:
                type: object
                properties:
                  cameras:
                    type: array
                    items:
                      $ref: '#/components/schemas/StubDevice'
                  updatedAt:
                    type: string
                    format: date-time
  /camera/events:
    get:
      summary: Camera events (stub)
      responses:
        '200':
          description: Camera events
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      type: object
                  updatedAt:
                    type: string
                    format: date-time
  /health/summary:
    get:
      summary: Aggregated health summary
      responses:
        '200':
          description: Health summary by module
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthSummaryResponse'
  /health/events/recent:
    get:
      summary: Recent backend events
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 200
          description: Maximum number of events to return
      responses:
        '200':
          description: Event feed
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  events:
                    type: array
                    items:
                      $ref: '#/components/schemas/FleetEvent'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    DeviceId:
      name: deviceId
      in: path
      required: true
      schema:
        type: string
  responses:
    Unauthorized:
      description: Missing or invalid credentials
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: Conflict with upstream state
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ValidationFailed:
      description: Validation failure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    UpstreamFailure:
      description: Upstream device failure
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        hint:
          type: string
          nullable: true
        correlationId:
          type: string
          nullable: true
      required:
        - code
        - message
    AudioStatus:
      type: object
      properties:
        stream_url:
          type: string
          format: uri
        volume:
          type: number
        mode:
          type: string
          enum: [auto, manual]
        source:
          type: string
          enum: [stream, file, stop]
        fallback_exists:
          type: boolean
      required:
        - stream_url
        - volume
        - mode
        - source
        - fallback_exists
    AudioConfig:
      type: object
      properties:
        stream_url:
          type: string
          format: uri
        volume:
          type: number
        mode:
          type: string
          enum: [auto, manual]
        source:
          type: string
          enum: [stream, file, stop]
      additionalProperties: false
    AudioVolumeRequest:
      type: object
      properties:
        volume:
          type: number
          minimum: 0
          maximum: 2
      required:
        - volume
    AudioPlayRequest:
      type: object
      properties:
        source:
          type: string
          enum: [stream, file]
        mode:
          type: string
          enum: [auto, manual]
        stream_url:
          type: string
          format: uri
      required:
        - source
      additionalProperties: false
    UploadResult:
      type: object
      properties:
        saved:
          type: boolean
        path:
          type: string
    StubDevice:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        role:
          type: string
        module:
          type: string
        status:
          type: string
      required:
        - id
        - name
        - role
        - module
        - status
    FleetLayoutResponse:
      type: object
      properties:
        modules:
          type: array
          items:
            type: object
            properties:
              module:
                type: string
              devices:
                type: array
                items:
                  $ref: '#/components/schemas/StubDevice'
            required:
              - module
              - devices
        generatedAt:
          type: string
          format: date-time
      required:
        - modules
        - generatedAt
    FleetStateResponse:
      type: object
      properties:
        audio:
          type: object
          properties:
            total:
              type: integer
            online:
              type: integer
            devices:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  role:
                    type: string
                  module:
                    type: string
                  online:
                    type: boolean
                  status:
                    $ref: '#/components/schemas/AudioStatus'
                  reason:
                    type: string
                  code:
                    type: string
                required:
                  - id
                  - name
                  - role
                  - module
                  - online
          required:
            - total
            - online
            - devices
        updatedAt:
          type: string
          format: date-time
      required:
        - audio
        - updatedAt
    HealthSummaryResponse:
      type: object
      properties:
        modules:
          type: array
          items:
            type: object
            properties:
              module:
                type: string
              total:
                type: integer
              online:
                type: integer
              devices:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    status:
                      type: string
                    reason:
                      type: string
                      nullable: true
            required:
              - module
              - total
              - online
              - devices
        updatedAt:
          type: string
          format: date-time
      required:
        - modules
        - updatedAt
    FleetEvent:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        type:
          type: string
        target:
          type: string
        message:
          type: string
        severity:
          type: string
        metadata:
          type: object
          additionalProperties: true
    ReadinessResponse:
      type: object
      properties:
        status:
          type: string
        reason:
          type: string
          nullable: true
        devices:
          type: integer
        lastLoadedAt:
          type: string
          format: date-time
          nullable: true
