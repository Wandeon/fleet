# Fleet API Production Environment Configuration
# Copy to .env and fill in actual values
#
# Token Sources:
# - <GENERATED>: Use openssl commands below to generate secure random values
# - <ADMIN-PROVIDED>: Device-specific tokens configured by network administrator
# - <CONFIGURED>: Set based on your deployment environment

# =====================================================
# CORE CONFIGURATION
# =====================================================

# Database
DATABASE_URL=file:./data/fleet.db

# API Server
API_PORT=3005
API_BEARER=e921328089c426ad4c2112d0fd5fdd8705f9d72fed8ab4820424f8455cfea5e5

# Device Adapter Configuration
DEVICE_ADAPTER=mock
# CRITICAL: Using 'mock' for initial validation, change to 'http' for production

# =====================================================
# DEVICE AUTHENTICATION
# =====================================================

# Device Authentication Tokens
# Source: <ADMIN-PROVIDED> - Must match tokens configured on each Pi device
# Contact your network administrator for these device-specific tokens
# NOTE: Using mock tokens for initial deployment - replace with real tokens for production
AUDIO_PI_AUDIO_01_TOKEN=mock-audio-01-token
AUDIO_PI_AUDIO_02_TOKEN=mock-audio-02-token
HDMI_PI_VIDEO_01_TOKEN=mock-video-01-token
CAMERA_PI_CAMERA_01_TOKEN=mock-camera-01-token

# =====================================================
# SECURITY & AUTHENTICATION
# =====================================================

# JWT Configuration
JWT_SECRET=e31d70d228165d7f9a86751c7d04eeca1d7209c533e4e5f82c50d1b8f7a9c6e8b51043aa8cf2c09e585b6f41c56ff4ceadd83f6b30ead973b26f297a2cd66343

JWT_EXPIRES_IN=24h
COOKIE_SECURE=true
COOKIE_SAME_SITE=strict

# Admin User Seeding (REMOVE after first deployment)
SEED_ADMIN_PASSWORD=3gZnf45YomGTVzCexHX1kHvUJZx5HydJ

# =====================================================
# AUDIO LIBRARY CONFIGURATION
# =====================================================

# Audio Library Management
LIBRARY_ROOT=/home/admin/fleet/volumes/audio-library
# Note: This directory must exist with proper permissions before starting containers
MAX_UPLOAD_BYTES=104857600
# 104857600 = 100MB per file upload

# Video/Camera/Zigbee Data Storage
VIDEO_DATA_ROOT=/var/lib/fleet/video-data
CAMERA_DATA_ROOT=/var/lib/fleet/camera-data
ZIGBEE_DATA_ROOT=/var/lib/fleet/zigbee-data
PROMETHEUS_TARGETS_ROOT=/var/lib/fleet/prometheus-targets
# Note: These directories are optional but recommended for production

# =====================================================
# PERFORMANCE & POLLING
# =====================================================

# Worker & Polling Configuration
WORKER_POLL_INTERVAL_MS=2000
AUDIO_MAX_DRIFT_MS=600
SSE_HEARTBEAT_MS=15000
POLL_INTERVAL_MS=5000

# =====================================================
# SYSTEM CONFIGURATION
# =====================================================

# Device Configuration
DEVICE_YAML=../inventory/device-interfaces.yaml

# Observability
PROMETHEUS_ENABLED=true
LOG_LEVEL=info
# Options: error, warn, info, debug

# =====================================================
# QUICK SETUP COMMANDS
# =====================================================
#
# Generate all required secrets at once:
#
# export API_BEARER=$(openssl rand -hex 32)
# export JWT_SECRET=$(openssl rand -hex 64)
# export SEED_ADMIN_PASSWORD=$(openssl rand -base64 24)
#
# echo "API_BEARER=$API_BEARER"
# echo "JWT_SECRET=$JWT_SECRET"
# echo "SEED_ADMIN_PASSWORD=$SEED_ADMIN_PASSWORD"
#
# Then copy the generated values into this file.
# =====================================================