name: 'Acceptance Smoke Tests'

on:
  pull_request:
    paths:
      - 'apps/api/**'
      - 'apps/ui/**'
      - 'apps/api/openapi.yaml'
  workflow_call:

jobs:
  smoke-matrix:
    name: 'Module Smoke Tests (${{ matrix.module }})'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        module: [audio, video, zigbee, camera, logs, fleet]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ${{ matrix.module }} module smoke test
        run: npm run test:modules
        env:
          MODULE_FILTER: ${{ matrix.module }}

  ui-api-drift-check:
    name: 'UI ‚Üî API Parameter Drift'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Check for parameter mismatches
        run: |
          echo "üîç Checking for UI ‚Üî API parameter drift..."

          # Check for deviceId vs source parameter issues
          if grep -r "deviceId" apps/ui/src/lib/api/ | grep -i log; then
            echo "‚ö†Ô∏è  Found 'deviceId' parameter in logs API calls"
            echo "Logs endpoints should use 'source' parameter, not 'deviceId'"
            grep -r "deviceId" apps/ui/src/lib/api/ | grep -i log
            echo ""
          fi

          # Check for legacy video endpoints
          if grep -r "/video/tv/" apps/ui/src/; then
            echo "‚ùå Found legacy /video/tv/* endpoints in UI"
            echo "Should use /video/devices/{id}/* instead"
            grep -r "/video/tv/" apps/ui/src/
            exit 1
          fi

          # Check for unguarded TODO/placeholder implementations
          if grep -r "TODO.*implement" apps/ui/src/ | grep -v "test" | grep -v ".spec"; then
            echo "‚ö†Ô∏è  Found TODO implementations in UI that may need feature flags"
            grep -r "TODO.*implement" apps/ui/src/ | grep -v "test" | grep -v ".spec"
          fi

          echo "‚úÖ UI ‚Üî API drift check complete"