name: CI Essentials

on:
  pull_request:

permissions:
  contents: read
  checks: write
  pull-requests: write

env:
  CI: true
  VITE_USE_MOCKS: '1'

jobs:
  typecheck:
    name: typecheck (node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20.x]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: |
            apps/api/package-lock.json
            apps/ui/package-lock.json
            package-lock.json

      - name: Install API dependencies
        working-directory: apps/api
        run: npm ci

      - name: Install UI dependencies
        working-directory: apps/ui
        run: npm ci

      - name: Typecheck API
        working-directory: apps/api
        run: npm run typecheck

      - name: Typecheck UI
        working-directory: apps/ui
        run: npm run typecheck

  build:
    name: build (node ${{ matrix.node }})
    runs-on: ubuntu-latest
    needs: typecheck
    strategy:
      matrix:
        node: [20.x]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: |
            apps/api/package-lock.json
            apps/ui/package-lock.json
            package-lock.json

      - name: Install API dependencies
        working-directory: apps/api
        run: npm ci

      - name: Install UI dependencies
        working-directory: apps/ui
        run: npm ci

      - name: Build API
        working-directory: apps/api
        run: |
          set -euo pipefail
          npm run build
          if [[ ! -d dist ]]; then
            echo "API build did not produce dist/" >&2
            exit 1
          fi

      - name: Build UI
        working-directory: apps/ui
        run: npm run build

  contract:
    name: contract validation (node ${{ matrix.node }})
    runs-on: ubuntu-latest
    needs: typecheck
    strategy:
      matrix:
        node: [20.x]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: |
            apps/api/package-lock.json
            apps/ui/package-lock.json
            package-lock.json

      - name: Install API dependencies
        working-directory: apps/api
        run: npm ci

      - name: Install UI dependencies
        working-directory: apps/ui
        run: npm ci

      - name: Ensure OpenAPI exists
        run: |
          if [ ! -f apps/api/openapi.yaml ]; then
            echo "OpenAPI spec not found at apps/api/openapi.yaml" >&2
            exit 1
          fi

      - name: Spectral lint
        working-directory: apps/api
        run: npm run contract

      - name: Generate UI client from OpenAPI
        working-directory: apps/ui
        run: npm run generate:openapi

      - name: Check generated client drift
        run: |
          git status --short
          git diff --stat
          git diff --exit-code -- apps/ui/src/lib/api/generated

  smoke:
    name: smoke verification (node ${{ matrix.node }})
    runs-on: ubuntu-latest
    needs: [build, contract]
    timeout-minutes: 10
    strategy:
      matrix:
        node: [20.x]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: |
            apps/api/package-lock.json
            apps/ui/package-lock.json
            package-lock.json

      - name: Install dependencies
        run: |
          npm ci
          cd apps/api && npm ci
          cd ../ui && npm ci
          cd ../api-mock && npm ci

      - name: Run centralized smoke verification
        run: node scripts/smoke-proxy.mjs
        timeout-minutes: 8

      - name: Upload artifacts on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-verification-logs
          path: |
            apps/api/logs/
            apps/ui/dist/
          retention-days: 7

  lint:
    name: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20.x]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: |
            apps/api/package-lock.json
            apps/ui/package-lock.json
            package-lock.json

      - name: Install API dependencies
        working-directory: apps/api
        run: npm ci

      - name: Install UI dependencies
        working-directory: apps/ui
        run: npm ci

      - name: ESLint (API)
        working-directory: apps/api
        run: npm run lint

      - name: ESLint (UI)
        working-directory: apps/ui
        run: npm run lint

  test:
    name: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20.x]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm
          cache-dependency-path: |
            apps/api/package-lock.json
            apps/ui/package-lock.json
            package-lock.json

      - name: Install API dependencies
        working-directory: apps/api
        run: npm ci

      - name: Install UI dependencies
        working-directory: apps/ui
        run: npm ci

      - name: Install Playwright browsers
        working-directory: apps/ui
        run: npx playwright install --with-deps chromium firefox

      - name: Run API tests
        working-directory: apps/api
        run: |
          if node -e "const pkg=require('./package.json'); process.exit(pkg.scripts?.test ? 0 : 1)"; then
            npm test
          else
            echo "No API tests configured, skipping..."
          fi

      - name: Run UI unit tests
        working-directory: apps/ui
        run: |
          if node -e "const pkg=require('./package.json'); process.exit(pkg.scripts?.test ? 0 : 1)"; then
            npm test
          else
            echo "No UI tests configured, skipping..."
          fi

      - name: Run Playwright E2E tests
        working-directory: apps/ui
        run: |
          if node -e "const pkg=require('./package.json'); process.exit(pkg.scripts?.['test:ui'] ? 0 : 1)"; then
            npm run test:ui
          else
            echo "No Playwright tests configured, skipping..."
          fi

      - name: Upload Playwright artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.node }}
          path: |
            apps/ui/playwright-report/
            apps/ui/test-results/
          retention-days: 30

      - name: Upload test screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots-${{ matrix.node }}
          path: apps/ui/test-results/**/*.png
          retention-days: 7

      - name: Upload trace files on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-${{ matrix.node }}
          path: apps/ui/test-results/**/*.zip
          retention-days: 7
