// Prisma schema for fleet backend

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Device {
  id            String       @id
  kind          String
  role          String?
  name          String
  alias         String?
  online        Boolean      @default(false)
  lastSeen      DateTime?    @map("last_seen")
  address       Json         @default("{}")
  capabilities  Json         @default("[]")
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @updatedAt      @map("updated_at")
  state         DeviceState?
  events        DeviceEvent[]
  jobs          Job[]
}

model DeviceState {
  deviceId      String   @id           @map("device_id")
  device        Device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  state         Json     @default("{}")
  status        String   @default("unknown")
  updatedAt     DateTime @default(now())      @map("updated_at")
  lastSeen      DateTime?                     @map("last_seen")
  offlineReason String?                       @map("offline_reason")
}

model DeviceEvent {
  id            Int      @id @default(autoincrement())
  deviceId      String   @map("device_id")
  device        Device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  eventType     String   @map("event_type")
  payload       Json     @default("{}")
  origin        String?  @map("origin")
  jobId         String?  @map("job_id")
  correlationId String?  @map("correlation_id")
  createdAt     DateTime @default(now()) @map("created_at")

  @@index([deviceId, createdAt])
  @@index([deviceId, eventType, createdAt])
}

model Job {
  id            String   @id
  deviceId      String   @map("device_id")
  device        Device   @relation(fields: [deviceId], references: [id], onDelete: Cascade)
  command       String
  payload       Json     @default("{}")
  metadata      Json     @default("{}")
  status        String   @default("pending")
  result        Json?
  error         String?
  attempts      Int      @default(0)
  dedupeKey     String?  @map("dedupe_key")
  correlationId String   @default(uuid()) @map("correlation_id")
  nextRunAt     DateTime? @map("next_run_at")
  lastAttemptAt DateTime? @map("last_attempt_at")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt      @map("updated_at")
  completedAt   DateTime?                @map("completed_at")

  @@index([status, nextRunAt])
  @@unique([dedupeKey])
}
